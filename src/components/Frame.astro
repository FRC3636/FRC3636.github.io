---
// This component handles layout & lazy loading of iframes.
// The iframe is wrapped in a div which allows it to shrink while maintaining its aspect ratio but not grow past its
// original width and height, which makes it better for mobile.

// Frames and videos under `<the-fold />` on any page are transformed by @divriots/jampack at build-time to use lazy loading.

// To use the component, just set either `src` to the URL or `videoId` to the YouTube video ID, and also set the maximum
// `width` and `height`. Add any other miscellaneous iframe properties as you desire.

import type { HTMLAttributes } from "astro/types";

type BaseProps = {
    width: number;
    height: number;
};
type SourceProps = { src: string } | { videoId: string };
export type Props = SourceProps & BaseProps & HTMLAttributes<"iframe">;

let { width, height, allow, allowfullscreen, src, ...rest } = Astro.props;

if ("videoId" in Astro.props) {
    src ??= `https://www.youtube-nocookie.com/embed/${Astro.props.videoId}?autoplay=1&mute=1`;
    allow ??=
        "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share";
    allowfullscreen ??= true;
    // Prevent this from showing up in final HTML
    delete (rest as Record<string, unknown>).videoId;
}
---

<div class="frame-container">
    <iframe
        {src}
        {allow}
        {allowfullscreen}
        referrerpolicy="strict-origin-when-cross-origin"
        loading="lazy"
        {...rest}
    />
</div>

<style
    lang="scss"
    define:vars={{
        aspect: `${width / height}`,
        "max-w": `${width}px`,
    }}
>
    .frame-container {
        max-width: var(--max-w);
        width: 100%;
        aspect-ratio: var(--aspect);
    }

    // Grow to parent size
    iframe {
        width: 100%;
        height: 100%;
        background-color: black;
    }
</style>